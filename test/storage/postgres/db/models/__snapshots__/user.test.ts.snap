// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`user should throw errors when empty strings are provided 1`] = `
Array [
  ValidationErrorItem {
    "instance": Object {
      "createdAt": 1970-01-01T00:00:00.000Z,
      "email": "",
      "firstName": "",
      "id": "",
      "lastName": "",
      "password": "",
      "updatedAt": 1970-01-01T00:00:00.000Z,
      "username": "",
    },
    "message": "Validation isUUID on id failed",
    "origin": "FUNCTION",
    "original": [Error: Validation isUUID on id failed],
    "path": "id",
    "type": "Validation error",
    "validatorArgs": Array [
      4,
    ],
    "validatorKey": "isUUID",
    "validatorName": "isUUID",
    "value": "",
  },
  ValidationErrorItem {
    "instance": Object {
      "createdAt": 1970-01-01T00:00:00.000Z,
      "email": "",
      "firstName": "",
      "id": "",
      "lastName": "",
      "password": "",
      "updatedAt": 1970-01-01T00:00:00.000Z,
      "username": "",
    },
    "message": "Validation notEmpty on username failed",
    "origin": "FUNCTION",
    "original": [Error: Validation notEmpty on username failed],
    "path": "username",
    "type": "Validation error",
    "validatorArgs": Array [
      true,
    ],
    "validatorKey": "notEmpty",
    "validatorName": "notEmpty",
    "value": "",
  },
  ValidationErrorItem {
    "instance": Object {
      "createdAt": 1970-01-01T00:00:00.000Z,
      "email": "",
      "firstName": "",
      "id": "",
      "lastName": "",
      "password": "",
      "updatedAt": 1970-01-01T00:00:00.000Z,
      "username": "",
    },
    "message": "Validation notEmpty on firstName failed",
    "origin": "FUNCTION",
    "original": [Error: Validation notEmpty on firstName failed],
    "path": "firstName",
    "type": "Validation error",
    "validatorArgs": Array [
      true,
    ],
    "validatorKey": "notEmpty",
    "validatorName": "notEmpty",
    "value": "",
  },
  ValidationErrorItem {
    "instance": Object {
      "createdAt": 1970-01-01T00:00:00.000Z,
      "email": "",
      "firstName": "",
      "id": "",
      "lastName": "",
      "password": "",
      "updatedAt": 1970-01-01T00:00:00.000Z,
      "username": "",
    },
    "message": "Validation notEmpty on lastName failed",
    "origin": "FUNCTION",
    "original": [Error: Validation notEmpty on lastName failed],
    "path": "lastName",
    "type": "Validation error",
    "validatorArgs": Array [
      true,
    ],
    "validatorKey": "notEmpty",
    "validatorName": "notEmpty",
    "value": "",
  },
  ValidationErrorItem {
    "instance": Object {
      "createdAt": 1970-01-01T00:00:00.000Z,
      "email": "",
      "firstName": "",
      "id": "",
      "lastName": "",
      "password": "",
      "updatedAt": 1970-01-01T00:00:00.000Z,
      "username": "",
    },
    "message": "Validation isEmail on email failed",
    "origin": "FUNCTION",
    "original": [Error: Validation isEmail on email failed],
    "path": "email",
    "type": "Validation error",
    "validatorArgs": Array [
      Object {
        "allow_display_name": false,
        "allow_utf8_local_part": true,
        "blacklisted_chars": "",
        "host_blacklist": Array [],
        "ignore_max_length": false,
        "require_display_name": false,
        "require_tld": true,
      },
    ],
    "validatorKey": "isEmail",
    "validatorName": "isEmail",
    "value": "",
  },
  ValidationErrorItem {
    "instance": Object {
      "createdAt": 1970-01-01T00:00:00.000Z,
      "email": "",
      "firstName": "",
      "id": "",
      "lastName": "",
      "password": "",
      "updatedAt": 1970-01-01T00:00:00.000Z,
      "username": "",
    },
    "message": "Validation notEmpty on email failed",
    "origin": "FUNCTION",
    "original": [Error: Validation notEmpty on email failed],
    "path": "email",
    "type": "Validation error",
    "validatorArgs": Array [
      true,
    ],
    "validatorKey": "notEmpty",
    "validatorName": "notEmpty",
    "value": "",
  },
  ValidationErrorItem {
    "instance": Object {
      "createdAt": 1970-01-01T00:00:00.000Z,
      "email": "",
      "firstName": "",
      "id": "",
      "lastName": "",
      "password": "",
      "updatedAt": 1970-01-01T00:00:00.000Z,
      "username": "",
    },
    "message": "Validation notEmpty on password failed",
    "origin": "FUNCTION",
    "original": [Error: Validation notEmpty on password failed],
    "path": "password",
    "type": "Validation error",
    "validatorArgs": Array [
      true,
    ],
    "validatorKey": "notEmpty",
    "validatorName": "notEmpty",
    "value": "",
  },
  ValidationErrorItem {
    "instance": Object {
      "createdAt": 1970-01-01T00:00:00.000Z,
      "email": "",
      "firstName": "",
      "id": "",
      "lastName": "",
      "password": "",
      "updatedAt": 1970-01-01T00:00:00.000Z,
      "username": "",
    },
    "message": "Validation len on password failed",
    "origin": "FUNCTION",
    "original": [Error: Validation len on password failed],
    "path": "password",
    "type": "Validation error",
    "validatorArgs": Array [
      6,
      256,
    ],
    "validatorKey": "len",
    "validatorName": "len",
    "value": "",
  },
]
`;

exports[`user should throw errors when no data is provided 1`] = `
Array [
  ValidationErrorItem {
    "instance": Object {
      "createdAt": 1970-01-01T00:00:00.000Z,
      "id": "foo",
      "updatedAt": 1970-01-01T00:00:00.000Z,
    },
    "message": "User.username cannot be null",
    "origin": "CORE",
    "path": "username",
    "type": "notNull Violation",
    "validatorArgs": Array [],
    "validatorKey": "is_null",
    "validatorName": null,
    "value": null,
  },
  ValidationErrorItem {
    "instance": Object {
      "createdAt": 1970-01-01T00:00:00.000Z,
      "id": "foo",
      "updatedAt": 1970-01-01T00:00:00.000Z,
    },
    "message": "User.email cannot be null",
    "origin": "CORE",
    "path": "email",
    "type": "notNull Violation",
    "validatorArgs": Array [],
    "validatorKey": "is_null",
    "validatorName": null,
    "value": null,
  },
  ValidationErrorItem {
    "instance": Object {
      "createdAt": 1970-01-01T00:00:00.000Z,
      "id": "foo",
      "updatedAt": 1970-01-01T00:00:00.000Z,
    },
    "message": "User.password cannot be null",
    "origin": "CORE",
    "path": "password",
    "type": "notNull Violation",
    "validatorArgs": Array [],
    "validatorKey": "is_null",
    "validatorName": null,
    "value": null,
  },
  ValidationErrorItem {
    "instance": Object {
      "createdAt": 1970-01-01T00:00:00.000Z,
      "id": "foo",
      "updatedAt": 1970-01-01T00:00:00.000Z,
    },
    "message": "Validation isUUID on id failed",
    "origin": "FUNCTION",
    "original": [Error: Validation isUUID on id failed],
    "path": "id",
    "type": "Validation error",
    "validatorArgs": Array [
      4,
    ],
    "validatorKey": "isUUID",
    "validatorName": "isUUID",
    "value": "foo",
  },
]
`;
